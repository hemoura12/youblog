<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blogMapper">

	<resultMap type="Blog" id="resultBlog">
		<id property="blogno" column="blog_no" />
		<result property="rowno" column="rowno" />
		<result property="title" column="title" />
		<result property="writerid" column="writer_id"/>
		<result property="contents" column="contents"/>
		<result property="contentstag" column="contents_tag"/>
		<result property="writedate" column="write_date"/>
		<result property="thumbnail" column="thumbnail"/>
		<result property="titleimage" column="title_image"/>
		<result property="catename1" column="cate_name1"/>
		<result property="catename2" column="cate_name2"/>
		<result property="tag" column="tag"/>
		<result property="hits" column="hits"/>
		<result property="likecount" column="like_count"/>
		<result property="hitstime" column="htis_time"/>
		<result property="state" column="state"/>
		<result property="notice" column="notice"/>
		<result property="bestno" column="bestno"/>
		<result property="membername" column="member_name"/>
		<result property="profilePhoto" column="profile_photo"/>
	</resultMap>
	
	<resultMap type="Blog" id="resultList">
		<result property="blogno" column="blog_no" />
		<result property="rowno" column="rowno" />
		<result property="title" column="title" />
		<result property="writerid" column="writer_id"/>
		<result property="contents" column="contents"/>
		<result property="contentstag" column="contents_tag"/>
		<result property="writedate" column="write_date"/>
		<result property="thumbnail" column="thumbnail"/>
		<result property="titleimage" column="title_image"/>
		<result property="catename1" column="cate_name1"/>
		<result property="catename2" column="cate_name2"/>
		<result property="tag" column="tag"/>
		<result property="hits" column="hits"/>
		<result property="likecount" column="like_count"/>
		<result property="hitstime" column="htis_time"/>
		<result property="state" column="state"/>
		<result property="notice" column="notice"/>
		<result property="bestno" column="bestno"/>
		<result property="membername" column="member_name"/>
		<result property="profilePhoto" column="profile_photo"/>
	</resultMap>
	
	<select id="selectBlog" parameterType="String" resultMap="resultBlog">
		select * 
		from TB_BLOG
		where writer_id = #{writerid}
	</select>
	
	<!-- <select id="selectBlog" parameterType="String" resultMap="resultBlog">
      select * 
      from TB_BLOG
      where blog_no = #{blogno}
   </select> -->
   
   <select id="selectBlogList" resultType="Blog" resultMap="resultList">
      select *
      from TB_BLOG
      where writer_id = #{writerid}
      ORDER BY WRITE_DATE desc
   </select>
   
   
   <update id="updateBlogSettings">
   		update TB_BLOG
   		set 
   </update>
   
   <select id="selectList"  resultMap="resultList" >
     select distinct cate_name1 from tb_category
   </select>
   
   <insert id="insert">
   insert into TB_BLOG(
   blog_no,
   title,
   writer_id,
   contents,
    write_date,
   cate_name1,
   cate_name2)
   values
   (blog_no_seq.nextval,
   #{title},
   #{writerid},
   #{contents},
    sysdate,
   #{catename1},
   #{catename2}
   )   
   where asc
   </insert>
   
   <select id="view" resultType="org.kh.youblog.blog.model.vo.Blog">
   select * from tb_board
   where blog_no = #{blogno}
   </select>
	
   <select id="selectBoardList" parameterType="String" resultMap="resultBlog">
		select * 
		from TB_BLOG
		where writer_id = #{writerid}
		ORDER BY WRITE_DATE desc
	</select>

		
	<select id="allCategory" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_BLOG_LIST)
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>		
		
	<select id="selectCategoryAll" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_BLOG_LIST WHERE CATE_NAME1 = #{cate1})
		ORDER BY rowno ASC
	</select>	
		
	<select id="selectCTGLev2All" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_BLOG_LIST WHERE CATE_NAME1 = #{cate1})
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
		ORDER BY rowno ASC
	</select>	
	
	<select id="selectCTG" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_BLOG_LIST 
		WHERE CATE_NAME1 = #{cate1}
		and CATE_NAME2 = #{cate2})
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="favoriteList5" resultMap="resultList" resultType="Blog">
		SELECT * FROM V_FAVORITE_BLOG
		WHERE BESTNO <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="favoriteList" resultMap="resultList" resultType="Blog">
		SELECT * FROM V_FAVORITE_BLOG
	</select>

   	<select id="newblogList" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_BLOG_LIST)
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="officialblogList" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_FORMULA_BLOG_LIST)
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
		ORDER BY rowno ASC
	</select>
	
	<select id="partnerblogList" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, CATE_NAME1, CATE_NAME2
		from V_PARTNER_BLOG_LIST)
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
		ORDER BY rowno ASC
	</select>
	
	<select id="likeblogList" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE, MEMBER_ID
		from V_LIKE_BLOG_LIST WHERE member_id=#{memberid})
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="subsWriterList" resultMap="resultList" resultType="Blog">
		SELECT *
		FROM V_SUBSCRIBE_WRITER
		WHERE reader_id=#{memberid}
	</select>
	
	<select id="subsblogList" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE
		from V_BLOG_LIST WHERE WRITER_ID=#{memberid})
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="subsAllblog" resultMap="resultList" resultType="Blog">
		select *
		FROM (select ROW_NUMBER() OVER (ORDER BY to_number(replace(BLOG_NO,' ' ,'')) DESC) AS rowno, 
		BLOG_NO, TITLE, WRITER_ID, MEMBER_NAME, CONTENTS, WRITE_DATE, HITS, PROFILE_PHOTO, THUMBNAIL, TITLE_IMAGE
		from V_SUBSCRIBE WHERE reader_id=#{memberid})
		WHERE rowno <![CDATA[ > ]]> #{row1}
		and rowno <![CDATA[ < ]]>= #{row2}
	</select>
	
	<select id="categoryList" resultType="java.util.HashMap">
		select * from TB_CATEGORY
	</select>
	
	<select id="categoryListLev1" resultType="java.util.HashMap">
		select distinct cate_name1 from TB_CATEGORY
	</select>
	
	
	
<!-- 	<delete id="deleteNotice" parameterType ="_int" flushCache ="true" statementType ="PREPARED">
			delete from notice where noticeno = #{noticeNo}
	</delete>

	<update id="updateNotice" parameterType ="Notice" flushCache="true" statementType="PREPARED">	
	UPDATE NOTICE 
	SET NOTICE_TITLE = #{noticeTitle}, 
	NOTICE_CONTENT = #{noticeContent},
	FILE_PATH = #{filePath} 
	WHERE NOTICE_NO = #{noticeNo}
	UPDATE NOTICE 
	<trim prefix="SET" suffixOverrides=",">
		<if test="noticeTitle != null">NOTICETITLE = #{noticeTitle},</if>
		<if test="noticeContent != null">NOTICECONTENT = #{noticeContent},</if>
		<if test="originalFilepath != null">ORIGINAL_FILEPATH = #{originalFilepath} </if>
	</trim>
	WHERE NOTICENO = #{noticeNo}
 </update> -->


</mapper>

